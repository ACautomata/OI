## 题目

**Description**
Michael喜欢滑雪百这并不奇怪， 因为滑雪的确很刺激。可是为了获得速度，滑的区域必须向下倾斜，而且当你滑到坡底，你不得不再次走上坡或者等待升降机来载你。Michael想知道载一个区域中最长底滑坡。区域由一个二维数组给出。数组的每个数字代表点的高度。下面是一个例子

 1  2  3  4 5 
16 17 18 19 6 
15 24 25 20 7 
14 23 22 21 8 
13 12 11 10 9
一个人可以从某个点滑向上下左右相邻四个点之一，当且仅当高度减小。在上面的例子中，一条可滑行的滑坡为24-17-16-1。当然25-24-23-...-3-2-1更长。事实上，这是最长的一条。
**Input**
输入的第一行表示区域的行数R和列数C(1 <= R,C <= 100)。下面是R行，每行有C个整数，代表高度h，0<=h<=10000。
**Output**
输出最长区域的长度。
**Sample Input**
5 5
1 2 3 4 5
16 17 18 19 6
15 24 25 20 7
14 23 22 21 8
13 12 11 10 9
**Sample Output**
25

## 代码

[代码](https://shimo.im/docs/v6rT6cVyw9dcxX8q/)

## 思路 

### 代码思路

	如果你是一个正常的人，你就看得懂我的代码里的注释

### 总体思路

——不断地用你已经打好的表在范围以内去对比出最长的值，注意在储存图的同时还要储存长度；
——搜索一般你可以干一件事，如果涉及到距离的，包括变相距离的，且已知的，你就可以通过打表的方式，同时多写一个函数去确定好需要对比的。

## 如果你还没听懂

[请点击](http://iwo.im/?q=%E6%80%8E%E4%B9%88%E6%91%B8%E9%B1%BC)   **←DISS**
